{"remainingRequest":"/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aleksandar/Strio-DAO/strio-dao.github.io/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/src/views/Home.vue","mtime":1639420828950},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1639420828506},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1639420828450},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1639420828506},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/node_modules/vue-loader/lib/index.js","mtime":1639420828446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}