{"remainingRequest":"/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/src/App.vue","mtime":1639419902745},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aleksandar/Strio-DAO/strio-dao.github.io/landing-page/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}